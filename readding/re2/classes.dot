digraph "classes" {
charset="utf-8"
rankdir=BT
"0" [label="{AdvancedPrediction|\l|forward(a, b)\l}", shape="record"];
"2" [label="{AugmentedResidual|\l|forward(x, res, i)\l}", shape="record"];
"3" [label="{AverageMeter|beta : float\lmoment : float\lt : float\lvalue : float\l|update(val)\l}", shape="record"];
"4" [label="{Conv1d|model\l|forward(x)\l}", shape="record"];
"6" [label="{Embedding|dropout\lembedding\lfix_embeddings\l|forward(x)\lset_(value)\l}", shape="record"];
"14" [label="{Indexer|id2w : dict\ln_spec\lw2id : dict\l|add_symbol(symbol)\lbuild(cls, symbols, min_counts, dump_filtered, log)\lindex(symbol)\lindices()\lkeys()\lload(cls, file)\lsave(file)\l}", shape="record"];
"15" [label="{Interface|args\ltarget_map\lvocab\l|load_embeddings()\lmake_batch(batch, with_target)\lpadding(samples, min_len)\lpost_process(output)\lpre_process(data, training)\lprocess_sample(sample, with_target)\lshuffle_batch(data)\l}", shape="record"];
"17" [label="{Linear|model\l|forward(x)\l}", shape="record"];
"18" [label="{Logger|best_eval : float\lbest_eval_str : str\lclips : int\lepoch : NoneType\lgrad_clipping\llog : NoneType\llog_per_updates\lsummary_per_updates\ltrain_meters : dict\lwriter : NoneType\l|log_eval(valid_stats)\lnewline()\lset_epoch(epoch)\lupdate(stats)\l}", shape="record"];
"22" [label="{Model|args\lbest_model_name : str\ldevice\lnetwork\lopt\lparams : list\lprefix : str\lupdates : int\l|evaluate(data)\lget_loss(logits, target)\lload(cls, file)\lnum_parameters(exclude_embed)\lpredict(batch)\lprocess_data(batch)\lsave(states, name)\lset_embeddings(embeddings)\lupdate(batch)\l}", shape="record"];
"23" [label="{Module|summary : dict\l|add_summary(name, val)\lget_summary(base_name)\l}", shape="record"];
"28" [label="{Network|blocks\lconnection\ldropout\lembedding\lpooling\lprediction\l|forward(inputs)\l}", shape="record"];
"31" [label="{Pooling|\l|forward(x, mask)\l}", shape="record"];
"32" [label="{Prediction|dense\l|forward(a, b)\l}", shape="record"];
"36" [label="{RobustIndexer|id2w\ln_spec\l|index(symbol)\lunk()\lunk_symbol()\lvalidate_spec()\l}", shape="record"];
"38" [label="{SymmetricPrediction|\l|forward(a, b)\l}", shape="record"];
"39" [label="{Trainer|args\llog\l|build_model()\ltrain()\l}", shape="record"];
"40" [label="{Vocab|char_map : dict\lid2w\ln_spec\l|build(cls, words, lower, min_df, max_tokens, pretrained_embeddings, dump_filtered, log)\lload(cls, file)\lload_embedding_vocab(file, lower)\lpad()\lpad_symbol()\lsave(file)\lunk()\l}", shape="record"];
"41" [label="{nn.Dropout|\l|\l}", shape="record"];
subgraph cluster_blocks {
// subgraph You'll have to prefix the name of your subgraphs with cluster:
{rank=BT
"7" [label="{Encoder|dropout\lencoders\l|forward(x, mask)\l}", shape="record"];
"1" [label="{Alignment|temperature\l|forward(a, b, mask_a, mask_b)\l}", shape="record"];
"11" [label="{Fusion|fusion\l|forward(x, align)\l}", shape="record"];
"10" [label="{FullFusion|dropout\lfusion\lfusion1\lfusion2\lfusion3\l|forward(x, align)\l}", shape="record"];
"21" [label="{MappedAlignment|projection\l|}", shape="record"];
"35" [label="{Residual|linear\l|forward(x, res, i)\l}", shape="record"];
}

}
"0" -> "32" [arrowhead="empty", arrowtail="none"];
"1" -> "23" [arrowhead="empty", arrowtail="none"];
"21" -> "1" [arrowhead="empty", arrowtail="none"];
"28" -> "23" [arrowhead="empty", arrowtail="none"];
"36" -> "14" [arrowhead="empty", arrowtail="none"];
"38" -> "0" [arrowhead="empty", arrowtail="none"];
"40" -> "36" [arrowhead="empty", arrowtail="none"];
"6" -> "28" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="embedding", style="solid"];
"14" -> "15" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="target_map", style="solid"];
"14" -> "15" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="target_map", style="solid"];
"17" -> "10" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="fusion1", style="solid"];
"17" -> "10" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="fusion2", style="solid"];
"17" -> "10" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="fusion3", style="solid"];
"17" -> "10" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="fusion", style="solid"];
"17" -> "11" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="fusion", style="solid"];
"17" -> "35" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="linear", style="solid"];
"18" -> "39" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="log", style="solid"];
"28" -> "22" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="network", style="solid"];
"31" -> "28" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="pooling", style="solid"];
"40" -> "15" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="vocab", style="solid"];
"40" -> "15" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="vocab", style="solid"];
"15" -> "39" [style=dotted, label="train"];
"22" -> "39" [style=dotted, label="train"];
"3" -> "18" [style=dotted, label="update"];
"7" -> "28" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="blocks", style="solid"];
"21" -> "28" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="blocks", style="solid"];
"2" -> "28" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="residualConnection", style="solid"];
"10" -> "28" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="blocks", style="solid"];
"0" -> "28" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="prediction", style="solid"];
"4" -> "7" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="encoders", style="solid"];
"41" -> "21" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="projection", style="solid"];
"17" -> "21" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="projection", style="solid"];
"41" -> "32" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="dense", style="solid"];
"17" -> "32" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="dense", style="solid"];
}
