digraph "classes" {
charset="utf-8"
rankdir=BT
"0" [label="{BertAttention|output\lpruned_heads : set\lself\l|forward(hidden_states, attention_mask, head_mask, encoder_hidden_states, encoder_attention_mask, past_key_value, output_attentions)\lprune_heads(heads)\l}", shape="record"];
"1" [label="{BertEmbeddings|LayerNorm\ldropout\lposition_embedding_type\lposition_embeddings\ltoken_type_embeddings\lword_embeddings\l|forward(input_ids, token_type_ids, position_ids, inputs_embeds, past_key_values_length)\l}", shape="record"];
"2" [label="{BertEncoder|config\llayer\l|forward(hidden_states, attention_mask, head_mask, encoder_hidden_states, encoder_attention_mask, past_key_values, use_cache, output_attentions, output_hidden_states, return_dict)\l}", shape="record"];
"3" [label="{BertForMaskedLM|bert\lcls\l|forward(input_ids, attention_mask, token_type_ids, position_ids, head_mask, inputs_embeds, encoder_hidden_states, encoder_attention_mask, labels, output_attentions, output_hidden_states, return_dict)\lget_output_embeddings()\lprepare_inputs_for_generation(input_ids, attention_mask)\lset_output_embeddings(new_embeddings)\l}", shape="record"];
"4" [label="{BertForMultipleChoice|bert\lclassifier\ldropout\l|forward(input_ids, attention_mask, token_type_ids, position_ids, head_mask, inputs_embeds, labels, output_attentions, output_hidden_states, return_dict)\l}", shape="record"];
"5" [label="{BertForNextSentencePrediction|bert\lcls\l|forward(input_ids, attention_mask, token_type_ids, position_ids, head_mask, inputs_embeds, labels, output_attentions, output_hidden_states, return_dict)\l}", shape="record"];
"6" [label="{BertForPreTraining|bert\lcls\l|forward(input_ids, attention_mask, token_type_ids, position_ids, head_mask, inputs_embeds, labels, next_sentence_label, output_attentions, output_hidden_states, return_dict)\lget_output_embeddings()\lset_output_embeddings(new_embeddings)\l}", shape="record"];
"7" [label="{BertForPreTrainingOutput|\l|}", shape="record"];
"8" [label="{BertForQuestionAnswering|bert\lnum_labels\lqa_outputs\l|forward(input_ids, attention_mask, token_type_ids, position_ids, head_mask, inputs_embeds, start_positions, end_positions, output_attentions, output_hidden_states, return_dict)\l}", shape="record"];
"9" [label="{BertForSequenceClassification|bert\lclassifier\ldropout\lnum_labels\l|forward(input_ids, attention_mask, token_type_ids, position_ids, head_mask, inputs_embeds, labels, output_attentions, output_hidden_states, return_dict)\l}", shape="record"];
"10" [label="{BertForTokenClassification|bert\lclassifier\ldropout\lnum_labels\l|forward(input_ids, attention_mask, token_type_ids, position_ids, head_mask, inputs_embeds, labels, output_attentions, output_hidden_states, return_dict)\l}", shape="record"];
"11" [label="{BertIntermediate|dense\lintermediate_act_fn\l|forward(hidden_states)\l}", shape="record"];
"12" [label="{BertLMHeadModel|bert\lcls\l|forward(input_ids, attention_mask, token_type_ids, position_ids, head_mask, inputs_embeds, encoder_hidden_states, encoder_attention_mask, labels, past_key_values, use_cache, output_attentions, output_hidden_states, return_dict)\lget_output_embeddings()\lprepare_inputs_for_generation(input_ids, past, attention_mask)\lset_output_embeddings(new_embeddings)\l}", shape="record"];
"13" [label="{BertLMPredictionHead|bias\ldecoder\ltransform\l|forward(hidden_states)\l}", shape="record"];
"14" [label="{BertLayer|add_cross_attention\lattention\lchunk_size_feed_forward\lcrossattention\lintermediate\lis_decoder\loutput\lseq_len_dim : int\l|feed_forward_chunk(attention_output)\lforward(hidden_states, attention_mask, head_mask, encoder_hidden_states, encoder_attention_mask, past_key_value, output_attentions)\l}", shape="record"];
"15" [label="{BertModel|config\lembeddings\lencoder\lpooler\l|forward(input_ids, attention_mask, token_type_ids, position_ids, head_mask, inputs_embeds, encoder_hidden_states, encoder_attention_mask, past_key_values, use_cache, output_attentions, output_hidden_states, return_dict)\lget_input_embeddings()\lset_input_embeddings(value)\l}", shape="record"];
"16" [label="{BertOnlyMLMHead|predictions\l|forward(sequence_output)\l}", shape="record"];
"17" [label="{BertOnlyNSPHead|seq_relationship\l|forward(pooled_output)\l}", shape="record"];
"18" [label="{BertOutput|LayerNorm\ldense\ldropout\l|forward(hidden_states, input_tensor)\l}", shape="record"];
"19" [label="{BertPooler|activation\ldense\l|forward(hidden_states)\l}", shape="record"];
"20" [label="{BertPreTrainedModel|base_model_prefix : str\lconfig_class\lload_tf_weights\l|}", shape="record"];
"21" [label="{BertPreTrainingHeads|predictions\lseq_relationship\l|forward(sequence_output, pooled_output)\l}", shape="record"];
"22" [label="{BertPredictionHeadTransform|LayerNorm\ldense\ltransform_act_fn\l|forward(hidden_states)\l}", shape="record"];
"23" [label="{BertSelfAttention|all_head_size\lattention_head_size : int\ldistance_embedding\ldropout\lis_decoder\lkey\lmax_position_embeddings\lnum_attention_heads\lposition_embedding_type\lquery\lvalue\l|forward(hidden_states, attention_mask, head_mask, encoder_hidden_states, encoder_attention_mask, past_key_value, output_attentions)\ltranspose_for_scores(x)\l}", shape="record"];
"24" [label="{BertSelfOutput|LayerNorm\ldense\ldropout\l|forward(hidden_states, input_tensor)\l}", shape="record"];
"25" [label="{PreTrainedModel|base_model\lbase_model_prefix : str\lconfig : PretrainedConfig\lconfig_class : NoneType\ldummy_inputs\lis_parallelizable : bool\lname_or_path\lvocab_size : Optional[int]\l|from_pretrained(cls: Optional[Union[str, os.PathLike]], pretrained_model_name_or_path)\lget_input_embeddings(): \lget_output_embeddings(): \linit_weights()\lprune_heads(heads_to_prune: Dict[int, List[int]])\lresize_token_embeddings(new_num_tokens: Optional[int]): \lsave_pretrained(save_directory: Union[str, os.PathLike])\lset_input_embeddings(value)\ltie_weights()\l}", shape="record"];
"3" -> "20" [arrowhead="empty", arrowtail="none"];
"4" -> "20" [arrowhead="empty", arrowtail="none"];
"5" -> "20" [arrowhead="empty", arrowtail="none"];
"6" -> "20" [arrowhead="empty", arrowtail="none"];
"8" -> "20" [arrowhead="empty", arrowtail="none"];
"9" -> "20" [arrowhead="empty", arrowtail="none"];
"10" -> "20" [arrowhead="empty", arrowtail="none"];
"12" -> "20" [arrowhead="empty", arrowtail="none"];
"15" -> "20" [arrowhead="empty", arrowtail="none"];
"0" -> "14" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="attention", style="solid"];
"0" -> "14" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="crossattention", style="solid"];
"1" -> "15" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="embeddings", style="solid"];
"2" -> "15" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="encoder", style="solid"];
"11" -> "14" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="intermediate", style="solid"];
"13" -> "16" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="predictions", style="solid"];
"13" -> "21" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="predictions", style="solid"];
"15" -> "3" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="bert", style="solid"];
"15" -> "4" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="bert", style="solid"];
"15" -> "5" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="bert", style="solid"];
"15" -> "6" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="bert", style="solid"];
"15" -> "8" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="bert", style="solid"];
"15" -> "9" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="bert", style="solid"];
"15" -> "10" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="bert", style="solid"];
"15" -> "12" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="bert", style="solid"];
"16" -> "3" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="cls", style="solid"];
"16" -> "12" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="cls", style="solid"];
"17" -> "5" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="cls", style="solid"];
"18" -> "14" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="output", style="solid"];
"19" -> "15" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="pooler", style="solid"];
"21" -> "6" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="cls", style="solid"];
"22" -> "13" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="transform", style="solid"];
"23" -> "0" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="self", style="solid"];
"24" -> "0" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="output", style="solid"];
"20" -> "25" [arrowhead="empty", arrowtail="none"];
}
