name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CI: true
  NODE: 14.x

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    - uses: actions/checkout@v1
    - name: Install Node.js
      uses: actions/setup-node@v1
      with:
        node-version: "${{ env.NODE }}"

    - name: Install npm dependencies
      run: npm ci

    - name: Run build task
      run: npm run build --if-present

    - name: Deploy to Server Cloud 2
      uses: easingthemes/ssh-deploy@v2.1.5
      env:
        SSH_PRIVATE_KEY: ${{ secrets.PRIVATE_KEY2 }}
        ARGS: "-rltgoDzvO --delete"
        SOURCE: "docs/.vuepress/dist/"
        REMOTE_PORT : ${{ secrets.PORT2 }}
        REMOTE_HOST: ${{ secrets.HOST2 }}
        REMOTE_USER: ${{ secrets.USERNAME }}
        TARGET: "/home/ubuntu/blog"

    - name: Deploy to Server Cloud 1
      uses: easingthemes/ssh-deploy@v2.1.5
      env:
        # 本地公钥传到部署服务器的authorized_keys中，本地私钥存到secrets中
        SSH_PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        ARGS: "-rltgoDzvO --delete"
        SOURCE: "docs/.vuepress/dist/"
        REMOTE_PORT : ${{ secrets.PORT }}
        REMOTE_HOST: ${{ secrets.HOST }}
        REMOTE_USER: ${{ secrets.USERNAME }}
        TARGET: "/var/www/vue-press/docs/.vuepress/dist/"

    # Runs a set of commands using the runners shell
#    - name: SSH Remote Commands
#      uses: appleboy/ssh-action@v0.1.2
#      with:
#        host: ${{ secrets.HOST }}
#        username: ${{ secrets.USERNAME }}
#        key: ${{ secrets.PRIVATE_KEY }}
#        port: ${{ secrets.PORT }}
#        script: cd /var/www/vue-press && git pull && npm i && npm run build

    # Slack Notification
    - name: Slack Notification
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took # selectable (default: repo,message)
      env:
        # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # optional
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
      if: always() # Pick up events even if the job fails or is canceled.